/* Selector {
    Property : Value ; 
} */

/* Le sélecteur d'ID (#) est utilisé en CSS pour cibler un élément HTML spécifique ayant un identifiant unique défini par l'attribut id. */

/* Le sélecteur de classe (.) est utilisé en CSS pour cibler un ou plusieurs éléments HTML ayant une classe spécifique définie par l'attribut class. */

body {
  background-image: url("/img/cake.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: top;
  font-family: sans-serif;
  padding: 20px;
}

h1 {
  font-size: 40px;
  margin-top: 0;
  margin-bottom: 15px;
}

h2 {
  font-size: 30px;
}

.established {
  font-style: italic;
}

h1,
h2,
p {
  text-align: center;
}

article {
  display: flex;
}

/* j'ai centré la div .menu horizontalement en utilisant margin-left: auto; et margin-right: auto;,
ce qui est une méthode courante. j'aurais pu également pu utiliser Flexbox, les marges négatives
ou text-align: center; sur le conteneur parent ( Body en faisant un display:flex justify-content:center align-item:center)
pour obtenir le même résultat. */

.menu {
  width: 100%;
  background-color: burlywood;
  margin-left: auto;
  margin-right: auto;
  padding: 20px;
  max-width: 500px;
}

/* La règle display: block; est ajoutée aux éléments <img> pour modifier leur comportement 
et les faire se comporter comme des éléments en bloc. Cela permet de les centrer 
horizontalement dans leur conteneur et d'assurer un comportement cohérent dans différentes mises en page.
ps : j'aurais pu faire un display flex  */

img {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
hr {
  height: 2px;
  background-color: brown;
  border-color: brown;
}

.bottom-line {
  margin-top: 25px;
}

h1,
h2 {
  font-family: Impact, serif;
}

/* Utiliser display: flex; avec justify-content: space-between; permet un contrôle plus précis de l'espacement entre les éléments. 
Cela garantit que les éléments sont répartis uniformément sur l'axe principal, avec un espace égal entre chaque élément.
C'est une approche plus flexible pour la mise en page et offre une meilleure compatibilité avec les mises en page réactives. 
j'aurais pus utilise un display: flex  justify-content:space-betwen  spa*/

.item p {
  display: inline-block;
  margin-top: 5px;
  margin-bottom: 5px;
  font-size: 18px;
}

.flavor,
.dessert {
  text-align: left;
  width: 75%;
}

.price {
  text-align: right;
  width: 25%;
}

/****** FOOTER *****/

footer {
  font-size: 14px;
}

.address {
  margin-bottom: 5px;
}

a {
  color: black;
}

a:visited {
  color: black;
}

a:hover {
  color: brown;
}

a:active {
  color: brown;
}
